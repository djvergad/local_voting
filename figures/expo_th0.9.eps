%!PS-Adobe-2.0 EPSF-2.0
%%Title: figures/expo_th0.9.eps
%%Creator: gnuplot 4.6 patchlevel 6
%%CreationDate: Fri Jul  7 17:35:32 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 338 251
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 10.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -56 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 338 50 lineto 338 251 lineto 50 251 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (figures/expo_th0.9.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 6)
  /Author (dimitriv)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jul  7 17:35:32 2017)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 170 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 5760.00 4030.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1037 544 M
4416 0 V
stroke
LTb
LCb setrgbcolor
1037 544 M
63 0 V
4353 0 R
-63 0 V
stroke
935 544 M
[ [(Helvetica) 170.0 0.0 true true 0 ( 0.001)]
] -56.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1037 843 M
31 0 V
4385 0 R
-31 0 V
1037 1017 M
31 0 V
4385 0 R
-31 0 V
1037 1141 M
31 0 V
4385 0 R
-31 0 V
-4385 96 R
31 0 V
4385 0 R
-31 0 V
-4385 79 R
31 0 V
4385 0 R
-31 0 V
-4385 66 R
31 0 V
4385 0 R
-31 0 V
-4385 58 R
31 0 V
4385 0 R
-31 0 V
-4385 50 R
31 0 V
4385 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
1037 1536 M
4416 0 V
stroke
LTb
LCb setrgbcolor
1037 1536 M
63 0 V
4353 0 R
-63 0 V
stroke
935 1536 M
[ [(Helvetica) 170.0 0.0 true true 0 ( 0.01)]
] -56.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1037 1834 M
31 0 V
4385 0 R
-31 0 V
1037 2009 M
31 0 V
4385 0 R
-31 0 V
1037 2133 M
31 0 V
4385 0 R
-31 0 V
-4385 96 R
31 0 V
4385 0 R
-31 0 V
-4385 78 R
31 0 V
4385 0 R
-31 0 V
-4385 67 R
31 0 V
4385 0 R
-31 0 V
-4385 57 R
31 0 V
4385 0 R
-31 0 V
-4385 51 R
31 0 V
4385 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
1037 2527 M
4416 0 V
stroke
LTb
LCb setrgbcolor
1037 2527 M
63 0 V
4353 0 R
-63 0 V
stroke
935 2527 M
[ [(Helvetica) 170.0 0.0 true true 0 ( 0.1)]
] -56.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1037 2826 M
31 0 V
4385 0 R
-31 0 V
1037 3000 M
31 0 V
4385 0 R
-31 0 V
1037 3124 M
31 0 V
4385 0 R
-31 0 V
-4385 96 R
31 0 V
4385 0 R
-31 0 V
-4385 79 R
31 0 V
4385 0 R
-31 0 V
-4385 66 R
31 0 V
4385 0 R
-31 0 V
-4385 58 R
31 0 V
4385 0 R
-31 0 V
-4385 51 R
31 0 V
4385 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
1037 3519 M
4416 0 V
stroke
LTb
LCb setrgbcolor
1037 3519 M
63 0 V
4353 0 R
-63 0 V
stroke
935 3519 M
[ [(Helvetica) 170.0 0.0 true true 0 ( 1)]
] -56.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1037 544 M
0 63 V
0 2912 R
0 -63 V
stroke
1037 374 M
[ [(Helvetica) 170.0 0.0 true true 0 ( 0.0001)]
] -56.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1480 544 M
0 31 V
0 2944 R
0 -31 V
1739 544 M
0 31 V
0 2944 R
0 -31 V
1923 544 M
0 31 V
0 2944 R
0 -31 V
2066 544 M
0 31 V
0 2944 R
0 -31 V
2182 544 M
0 31 V
0 2944 R
0 -31 V
2281 544 M
0 31 V
0 2944 R
0 -31 V
2366 544 M
0 31 V
0 2944 R
0 -31 V
2442 544 M
0 31 V
0 2944 R
0 -31 V
2509 544 M
0 63 V
0 2912 R
0 -63 V
stroke
2509 374 M
[ [(Helvetica) 170.0 0.0 true true 0 ( 0.001)]
] -56.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
2952 544 M
0 31 V
0 2944 R
0 -31 V
3211 544 M
0 31 V
0 2944 R
0 -31 V
3395 544 M
0 31 V
0 2944 R
0 -31 V
3538 544 M
0 31 V
0 2944 R
0 -31 V
3654 544 M
0 31 V
0 2944 R
0 -31 V
3753 544 M
0 31 V
0 2944 R
0 -31 V
3838 544 M
0 31 V
0 2944 R
0 -31 V
3914 544 M
0 31 V
0 2944 R
0 -31 V
3981 544 M
0 63 V
0 2912 R
0 -63 V
stroke
3981 374 M
[ [(Helvetica) 170.0 0.0 true true 0 ( 0.01)]
] -56.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4424 544 M
0 31 V
0 2944 R
0 -31 V
4683 544 M
0 31 V
0 2944 R
0 -31 V
4867 544 M
0 31 V
0 2944 R
0 -31 V
5010 544 M
0 31 V
0 2944 R
0 -31 V
5126 544 M
0 31 V
0 2944 R
0 -31 V
5225 544 M
0 31 V
0 2944 R
0 -31 V
5310 544 M
0 31 V
0 2944 R
0 -31 V
5386 544 M
0 31 V
0 2944 R
0 -31 V
5453 544 M
0 63 V
0 2912 R
0 -63 V
stroke
5453 374 M
[ [(Helvetica) 170.0 0.0 true true 0 ( 0.1)]
] -56.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1037 3519 N
0 -2975 V
4416 0 V
0 2975 V
-4416 0 V
Z stroke
LCb setrgbcolor
136 2031 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 170.0 0.0 true true 0 (Throughput packets/slot)]
] -56.7 MCshow
grestore
LTb
LCb setrgbcolor
3245 119 M
[ [(Helvetica) 170.0 0.0 true true 0 (Arrival rate \(connections/timeslot\))]
] -56.7 MCshow
LTb
3245 3774 M
[ [(Helvetica) 170.0 0.0 true true 0 (Throughput, Packet Loss = 0.9)]
] -56.7 MCshow
1.500 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
1.500 UP
1.000 UL
LT0
LC0 setrgbcolor
1037 1838 M
368 246 V
368 216 V
368 114 V
368 49 V
368 31 V
368 24 V
368 20 V
368 36 V
368 58 V
368 84 V
368 118 V
368 152 V
1037 1838 Pls
1405 2084 Pls
1773 2300 Pls
2141 2414 Pls
2509 2463 Pls
2877 2494 Pls
3245 2518 Pls
3613 2538 Pls
3981 2574 Pls
4349 2632 Pls
4717 2716 Pls
5085 2834 Pls
5453 2986 Pls
% End plot #1
% Begin plot #2
1.500 UP
1.000 UL
LT1
LC1 setrgbcolor
1037 1846 M
368 229 V
368 212 V
368 96 V
368 32 V
368 6 V
368 22 V
368 21 V
368 38 V
368 69 V
368 95 V
368 128 V
368 168 V
1037 1846 Crs
1405 2075 Crs
1773 2287 Crs
2141 2383 Crs
2509 2415 Crs
2877 2421 Crs
3245 2443 Crs
3613 2464 Crs
3981 2502 Crs
4349 2571 Crs
4717 2666 Crs
5085 2794 Crs
5453 2962 Crs
% End plot #2
% Begin plot #3
1.500 UP
1.000 UL
LT2
LC2 setrgbcolor
1037 1450 M
368 149 V
368 130 V
368 124 V
368 102 V
368 87 V
368 74 V
368 68 V
368 73 V
368 106 V
368 146 V
368 185 V
368 200 V
1037 1450 Star
1405 1599 Star
1773 1729 Star
2141 1853 Star
2509 1955 Star
2877 2042 Star
3245 2116 Star
3613 2184 Star
3981 2257 Star
4349 2363 Star
4717 2509 Star
5085 2694 Star
5453 2894 Star
% End plot #3
% Begin plot #4
1.500 UP
1.000 UL
LT6
LC6 setrgbcolor
1037 1840 M
368 223 V
368 178 V
368 91 V
368 52 V
368 46 V
368 32 V
368 30 V
368 34 V
368 56 V
368 95 V
368 127 V
368 164 V
1037 1840 CircleF
1405 2063 CircleF
1773 2241 CircleF
2141 2332 CircleF
2509 2384 CircleF
2877 2430 CircleF
3245 2462 CircleF
3613 2492 CircleF
3981 2526 CircleF
4349 2582 CircleF
4717 2677 CircleF
5085 2804 CircleF
5453 2968 CircleF
% End plot #4
% Begin plot #5
1.500 UP
1.000 UL
LT7
LC7 setrgbcolor
1037 1499 M
368 157 V
368 153 V
368 135 V
368 131 V
368 112 V
368 98 V
368 78 V
368 74 V
368 92 V
368 106 V
368 138 V
368 175 V
1037 1499 TriU
1405 1656 TriU
1773 1809 TriU
2141 1944 TriU
2509 2075 TriU
2877 2187 TriU
3245 2285 TriU
3613 2363 TriU
3981 2437 TriU
4349 2529 TriU
4717 2635 TriU
5085 2773 TriU
5453 2948 TriU
% End plot #5
LCw setrgbcolor
1.000 2715 607 2636 528 BoxColFill
% Begin plot #6
1.500 UP
1.000 UL
LT0
LC0 setrgbcolor
LCb setrgbcolor
3327 1047 M
[ [(Helvetica) 170.0 0.0 true true 0 (LocalVoting)]
] -56.7 MRshow
LT0
3429 1047 M
502 0 V
3680 1047 Pls
% End plot #6
% Begin plot #7
1.500 UP
1.000 UL
LT1
LC1 setrgbcolor
LCb setrgbcolor
3327 871 M
[ [(Helvetica) 170.0 0.0 true true 0 (LQF)]
] -56.7 MRshow
LT1
3429 871 M
502 0 V
3680 871 Crs
% End plot #7
% Begin plot #8
1.500 UP
1.000 UL
LT2
LC2 setrgbcolor
LCb setrgbcolor
3327 695 M
[ [(Helvetica) 170.0 0.0 true true 0 (DRAND)]
] -56.7 MRshow
LT2
3429 695 M
502 0 V
3680 695 Star
% End plot #8
% Begin plot #9
1.500 UP
1.000 UL
LT6
LC6 setrgbcolor
LCb setrgbcolor
4645 1047 M
[ [(Helvetica) 170.0 0.0 true true 0 (LoBaTS)]
] -56.7 MRshow
LT6
4747 1047 M
502 0 V
4998 1047 CircleF
% End plot #9
% Begin plot #10
1.500 UP
1.000 UL
LT7
LC7 setrgbcolor
LCb setrgbcolor
4645 871 M
[ [(Helvetica) 170.0 0.0 true true 0 (Lyui)]
] -56.7 MRshow
LT7
4747 871 M
502 0 V
4998 871 TriU
% End plot #10
1.000 UL
LTb
LCb setrgbcolor
1037 3519 N
0 -2975 V
4416 0 V
0 2975 V
-4416 0 V
Z stroke
1.500 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
